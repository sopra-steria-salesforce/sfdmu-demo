name: '[Push] Create Package'
on:
  workflow_dispatch:
    inputs:
      skip-validation:
        description: 'Skip validation? (package will only be deployable to preprod)'
        required: false
        type: boolean
      use-snapshot:
        description: 'Use Snapshot?'
        required: false
        type: boolean
  push:
    branches:
      - master
      - main
      - preprod
    paths:
      - 'force-app/**'
jobs:
  create-package:
    name: package
    permissions:
      contents: read
      actions: read
      pull-requests: read
      id-token: write
    uses: ./.github/workflows/subflow.create_package.yml
    secrets: inherit
    with:
      useSnapshot: ${{ inputs.use-snapshot || false }} # TODO: test using snapshots
      skipValidation: ${{ inputs.skip-validation || false }}

  # ################################################################### #

  deploy:
    name: ${{ ((github.ref_name == 'master' || github.ref_name == 'main') && 'sit') || github.ref_name }}
    if: needs.create-package.outputs.successfullyCreatedPackage == 'true'
    needs: [create-package]
    permissions:
      contents: read
      id-token: write
    uses: ./.github/workflows/subflow.deploy_package.yml
    secrets: inherit
    with:
      ENV: ${{ ((github.ref_name == 'master' || github.ref_name == 'main') && 'sit') || github.ref_name }} # use sit as env if master/main, because we're deployed the package to sit. Else, use branch name (preprod)
      PACKAGE_ID: ${{ needs.create-package.outputs.packageId }}
      TAG: ${{ needs.create-package.outputs.newVersionTag }}
      POST_TO_SLACK: true

  # ################################################################### #

  create-release:
    name: release
    needs: [create-package, deploy]
    permissions:
      contents: write
      actions: read
      id-token: write
      pull-requests: read
    # always() to ensure posting the release if SIT install failed
    if: always() && needs.create-package.outputs.successfullyCreatedPackage == 'true' && (github.ref_name == 'master' || github.ref_name == 'main')
    uses: ./.github/workflows/subflow.create_release.yml
    secrets: inherit
    with:
      PACKAGE_ID: ${{ needs.create-package.outputs.packageId }}
      NEW_VERSION_TAG: ${{ needs.create-package.outputs.newVersionTag }}
      CODE_COVERAGE: ${{ fromJSON(needs.create-package.outputs.codeCoverage) }}
      SUCCESSFULLY_INSTALLED: ${{ needs.deploy.outputs.successfullyInstalled }}
