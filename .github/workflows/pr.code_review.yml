name: '[PR] Code Review'
on:
  pull_request_review:
    types: [submitted]
jobs:
  prep:
    name: prep
    runs-on: ubuntu-latest
    if: vars.SF_SLACK_ENABLED == 'true' && contains(fromJSON('["approved", "changes_requested", "commented"]'), github.event.review.state)
    steps:
      - id: pull-request
        run: echo "number=$(echo "$GITHUB_REF" | awk -F / '{print $3}')" >> $GITHUB_OUTPUT

      - id: emoji
        run: echo "id=${{ github.event.review.state == 'approved' && 'white_check_mark' || github.event.review.state == 'changes_requested' && 'x' || github.event.review.state == 'commented' && 'grey_question' || 'old-man-yells-at-salesforce' }}" >> $GITHUB_OUTPUT

      - id: status
        run: echo "label=${{ github.event.review.state == 'approved' && 'Approved' || github.event.review.state == 'changes_requested' && 'Declined' || github.event.review.state == 'commented' && 'Comment' || 'error' }}" >> $GITHUB_OUTPUT
    outputs:
      pr_number: ${{ steps.pull-request.outputs.number }}
      emoji: ${{ steps.emoji.outputs.id }}
      status: ${{ steps.status.outputs.label }}

  trigger-code-review-comment:
    name: Trigger Code Review Comment
    if: vars.SF_SLACK_ENABLED == 'true'
    runs-on: ubuntu-latest
    needs: prep
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/create-github-app-token@v2
        id: generate_token
        with:
          app-id: ${{ secrets.SF_GITHUB_BOT_APP_ID }}
          private-key: ${{ secrets.SF_GITHUB_BOT_PRIVATE_KEY }}
      - name: Trigger Job to Post Review
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}
          event-type: post-code-review-comment
          client-payload: |-
            {
              "pr_number": "${{ needs.prep.outputs.pr_number }}",
              "emoji": "${{ needs.prep.outputs.emoji }}",
              "status": "${{ needs.prep.outputs.status }}",
              "pr_body": "${{ github.event.review.body }}",
              "html_url": "${{ github.event.review.html_url }}",
              "actor": "${{ github.actor }}"
            }
